import System
import System.IO
import System.Diagnostics
import System.Linq.Enumerable
import System.Threading

def Run(exe as string, args as string, input as string):
	info = ProcessStartInfo(exe, args,
		RedirectStandardError: true,
		RedirectStandardOutput: true,
		RedirectStandardInput: true,
		UseShellExecute: false,
		CreateNoWindow: true)
	process = Process.Start(info)
	process.BeginErrorReadLine()
	process.BeginOutputReadLine()
	output = StringWriter()
	error = StringWriter()
	process.ErrorDataReceived += {s, a| error.WriteLine(a.Data) }
	process.OutputDataReceived += {s, a| output.WriteLine(a.Data) }
	for line in input.Split(char('\n')):
		process.StandardInput.WriteLine(line)
	process.StandardInput.Close()

	process.WaitForExit(2*60*1000)
	unless process.HasExited:
		try:
			process.Kill()
		except e:
			print "Ошибка при убийстве процесса '$exe $args' $e"
		raise "Процесс '$exe $args' не завершился за 2 минуты и был убит $error $output"
	if process.ExitCode != 0:
		raise "Процесс '$exe $args' завершился ошибкой ${process.ExitCode} $error $output"
	return error.ToString() + output.ToString()

def InitMySql(datadir, options):
	dbPath = Path.Combine(datadir, "mysql")
	return if Exist(dbPath)
	MkDir(datadir)
	MkDir(dbPath)
	mysqlPath = ""
	path = Environment.GetEnvironmentVariable("PATH")
	for item in path.Split(char(';')):
		if Exist(Path.Combine(item, "mysqld.exe")):
			mysqlPath = Path.GetFullPath(Path.Combine(item, ".."))
	if mysqlPath == "":
		raise "Не удалось найти mysqld проверь что mysql установлен и добавлен в PATH"
	mysqlDir = Path.Combine(mysqlPath, "share")
	initScriptFiles = ("mysql_system_tables.sql", "mysql_system_tables_data.sql")
	initSql = "use mysql;\n"
	for file in initScriptFiles:
		initSql += File.ReadAllText(Path.Combine(mysqlDir, file))

	Run("mysqld", "$options --console --standalone --datadir=\"$datadir\" --bootstrap", initSql)

desc """
запускает mysql сервер
параметры
path - путь к данным, по умолчанию data
randomPort - выбрать случайный порт
port - задать порт
"""
task "db:start":
	root = Configuration.Maybe.path or "data"
	datadir = Path.GetFullPath(Path.Combine(root, "db")).Replace("\\", "/")
	tmpdir = Path.GetFullPath(Path.Combine(root, "tmp")).Replace("\\", "/")
	port = Random().Next(10000, 20000).ToString() if Configuration.Maybe.randomPort
	port = Globals.Maybe.Port or Configuration.Maybe.port unless port
	unless port:
		if Exist("$root/port"):
			port = File.ReadAllText("$root/port")
	print port

	MkDir(datadir)
	MkDir(tmpdir)
	options = ""
	if Exist("build/my.ini"):
		config = Path.GetFullPath("build/my.ini").Replace("\\", "/")
		options += " --defaults-extra-file=$config"
	if port:
		options += " --port=$port"
	InitMySql(datadir, options)

	pidFile = Directory.GetFiles(datadir, "*.pid")
	if port:
		File.WriteAllText(Path.Combine(datadir, "port"), port.ToString())
	mysqlProcess as Process
	if pidFile.Length:
		text = File.ReadAllText(pidFile[0])
		pid = 0
		if text and int.TryParse(text, pid):
			mysqlProcess = Process.GetProcesses().FirstOrDefault({p| p.Id == pid})

	unless mysqlProcess:
		Process.Start("mysqld", "$options --console --standalone --datadir=\"$datadir\" --tmpdir=\"$tmpdir\"")
		Thread.Sleep(2000)
