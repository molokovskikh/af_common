import System
import System.Collections
import System.IO
import MySql.Data.MySqlClient

def EnvByName(name as string) as string:
	connectionString = Globals.Environments[name]
	if not (connectionString.ToLower().Contains("user=") or connectionString.ToLower().Contains("user id=")):
		server = MySqlConnectionStringBuilder(connectionString).Server
		user = Configuration.Maybe.User or Ask("user for $server:")
		connectionString += "user=${user};"

	if not connectionString.ToLower().Contains("password="):
		password = Configuration.Maybe.Password or AskPassword("password:")
		connectionString += "password=${password};"

	if name.ToLower() == "local" and not connectionString.Contains("port"):
		port = Globals.Maybe.Port or Configuration.Maybe.Port
		if Environment.MachineName.ToLower() == "devsrv":
			connectionString += ";port=$port" if port
	Globals.Environments[name] = connectionString
	connectionString = Globals.Environments[name]
	return connectionString

def Env() as string:
	name = Globals.Maybe.BaseEnv or Globals.Environment
	unless Globals.Environments.ContainsKey(name):
		raise "Не знаю что за среда $name"
	return EnvByName(name)

def UpdateGlobals():
	path = """C:\Program Files (x86)\MSBuild\14.0\Bin\msbuild.exe"""
	if Exist(path):
		Globals.MsbuildExe = path
	Globals.Environment = ToPascal(Configuration.Maybe.env)\
		or Globals.Maybe.Environment\
		or @Local

	Db.Current = Db(Env)
	if Globals.Maybe.Builtin:
		vars = Globals.Builtin[Globals.Environment]
		if vars:
			for k in vars:
				Globals[k.Key] = k.Value

	if Globals.Maybe.Variables:
		vars = Globals.Variables[Globals.Environment]
		if vars:
			for k in vars:
				Globals[k.Key] = k.Value

Global(
	Builtin: {
		@Local: {
			@DeployRoot: """C:\inetpub\wwwroot""",
			@PublishRoot: ""
		},
		@Test: {
			@DeployRoot: """\\solo\TEST""",
			@PublishRoot: ""
		},
		@Production: {
			@DeployRoot: """\\adc.analit.net\Inforoom\WebApps\""",
			@PublishRoot: """\\adc.analit.net\Inforoom\Publish\Publish"""
		},
		@Test2: {
			@DeployRoot: """\\test2.analit.net\WWW\""",
			@PublishRoot: ""
		}
	},
	BackupRoot: """\\offdc\MMedia\AppBackUp\""",
	Configuration: Configuration,
	Editor : "vim-nox",
	FrameworkVersion : "4.0.30319",
	#используется для определения версии библиотек
	TargetFramework: "net40",
	DeployRoot : """\\adc.analit.net\Inforoom\WebApps\""",
	BuildRoot : "output",
	PublishRoot : """\\adc.analit.net\Inforoom\Publish\Publish""",
	Environments : {
		@Production2 : """Data Source=sql2.analit.net;Database=Usersettings;Connect Timeout=300;convert zero datetime=yes;Default Command Timeout=150;Allow User Variables=true;""",
		@Dbms : """Data Source=dbms.adc.analit.net;Database=Usersettings;Connect Timeout=300;convert zero datetime=yes;Default Command Timeout=150;Allow User Variables=true;""",
		@Dbms2 : """Data Source=dbms2.adc.analit.net;Database=Usersettings;Connect Timeout=300;convert zero datetime=yes;Default Command Timeout=150;Allow User Variables=true;""",
		@Dbms2Long : """Data Source=dbms2.adc.analit.net;Database=Usersettings;Connect Timeout=300;convert zero datetime=yes;Default Command Timeout=0;Allow User Variables=true;""",
		@Production : """Data Source=sql2.analit.net;Database=Usersettings;Connect Timeout=300;convert zero datetime=yes;Default Command Timeout=0;Allow User Variables=true;""",
		@Development : """Data Source=testsql.analit.net;Database=Usersettings;User ID=system;Password=newpass;Connect Timeout=300;convert zero datetime=yes;Default Command Timeout=300;Allow User Variables=true;""",
		@DevelopmentLong : """Data Source=testsql.analit.net;Database=Usersettings;User ID=system;Password=newpass;Connect Timeout=300;convert zero datetime=yes;Default Command Timeout=30000;Allow User Variables=true;""",
		@Local : """Data Source=localhost;Database=Usersettings;User ID=root;Password=;Connect Timeout=300;convert zero datetime=yes;Default Command Timeout=300;Allow User Variables=true;""",
		@LocalLong : """Data Source=localhost;Database=Usersettings;User ID=root;Password=;Connect Timeout=300;convert zero datetime=yes;Default Command Timeout=0;Allow User Variables=true;""",
		@Test : """Data Source=testsql.analit.net;Database=Usersettings;User ID=system;Password=newpass;Connect Timeout=300;convert zero datetime=yes;Default Command Timeout=300;Allow User Variables=true;""",
		@Test2 : """Data Source=test2.analit.net;Database=Internet;User ID=root;Password=inforoom2db_test;Connect Timeout=300;convert zero datetime=yes;Default Command Timeout=300;Allow User Variables=true;""",
	}
)
UpdateGlobals()

task @UpdateGlobals:
	UpdateGlobals()

task @Production:
	if not Configuration.Maybe.Environment and not Configuration.Maybe.env:
		Configuration.Environment = @Production
		Globals.Environment = @Production
	UpdateGlobals()

task "env", [@Production]

task "debug:env":
	for i in Globals:
		print "${i.Key} = ${i.Value}"
