import System
import System.IO
import System.Reflection
import System.Collections.Generic
import System.Linq.Enumerable from System.Core

assemblies = Dictionary[of string, Assembly]()

#def Load(s as object, a as System.AssemblyLoadEventArgs ):
#	assembly = a.LoadedAssembly
#	assemblies[assembly.FullName] = assembly	

#def Resolve(s as object, a as System.ResolveEventArgs):
#	assembly as Assembly
#	assemblies.TryGetValue(a.Name, assembly)
#	return assembly

#AppDomain.CurrentDomain.AssemblyLoad += Load
#AppDomain.CurrentDomain.AssemblyResolve += Resolve

libs = List of string()
if Directory.Exists("lib"):
	libs.Add(Path.GetFullPath("lib"))
	for subDir in Directory.GetDirectories("lib"):
		libs.Add(Path.GetFullPath("subDir"))

libRoot = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "../lib/")
for dir in Directory.GetDirectories(libRoot):
	continue if Path.GetFileName(dir).ToLower() == ".svn"
	libs.Add(dir)

Configuration.LibPaths = libs
#Configuration.AutoLoad.Add("Tools.bake")
#Configuration.ScriptPaths.Add(AppDomain.CurrentDomain.BaseDirectory)