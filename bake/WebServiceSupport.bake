import System.IO
import file from Config.bake

buildTo = Path.GetFullPath("build")
project = ""
if Globals.IsDefined("Project"):
	project = Globals.Project
else:
	project = Globals.project

projectPath = "src/${project}"
projectFile = "${projectPath}/${project}.csproj"
deployTo = Path.Combine(Globals.DeployRoot, project)
if Globals.IsDefined(@deployTo):
	deployTo = Globals.deployTo

if not Exist(projectFile):
	projectFile = "${projectPath}/${project}.vbproj"

params = { "OutDir" : "${buildTo}\\bin\\", "OutputPath" : "${buildTo}\\bin\\", "Configuration" : "Release" }
if Globals.IsDefined(@Platform):
	params.Add("Platform", Globals.Platform)

Task @buildWebService, [@clean]:
	MkDir(buildTo) if not Exist(buildTo)
	MsBuild(projectFile, "/verbosity:quiet", "/nologo",
			Target : "build",
			Parameters : params,
			FrameworkVersion : Globals.FrameworkVersion).Execute()
	Cp(FileSet(["**/*.as?x", "**/*.svc"], 
				BaseDirectory: projectPath), 
		buildTo, true)
	Cp("${projectPath}/Web.release.config", "${buildTo}/Web.config")

Task @clean:
	MsBuild(projectFile, "/verbosity:quiet", "/nologo",
			Target : "clean",
			Parameters : params,
			FrameworkVersion : Globals.FrameworkVersion).Execute()
	Rm("${buildTo}/*", true) if Exist(buildTo)

Task @DeployWebService, [@deployWebService]

Task @deployWebService, [@cleanDeploy]:
	Cp(FileSet("**/*.*", BaseDirectory : buildTo), deployTo, true)
	
Task @cleanDeploy:
	Rm(FileSet("**/*.*", Excludes : ["*.log"], BaseDirectory : deployTo))
