import System.IO
import System.Linq.Enumerable

def CopyAssets(output as string):
	return unless Exist("packages")
	return unless Exist("src/Common.Web.UI/Common.Web.Ui/Assets/Content/")

	assets = Path.Combine(output, "Assets", "Javascripts")
	for dir in Directory.GetDirectories("packages"):
		path = Path.Combine(dir, "Content", "Scripts")
		continue unless Exist(path)
		javaScripts = FileSet("*.min.js", BaseDirectory: path)
		if javaScripts.Files.Count:
			Cp(javaScripts, assets)
		else:
			Cp(FileSet("**.*", BaseDirectory: path), assets)
	javaScripts = FileSet("src/Common.Web.UI/Common.Web.Ui/Assets/Content/javascripts/**.*")
	Cp(javaScripts, assets) if javaScripts.Files.Count

	assets = Path.Combine(output, "Assets", "images")
	images = FileSet("src/Common.Web.UI/Common.Web.Ui/Assets/Content/images/**.*")
	Cp(images, assets) if images.Files.Count
	
	assets = Path.Combine(output, "Assets", "Stylesheets")
	for dir in Directory.GetDirectories("packages"):
		path = Path.Combine(dir, "Content", "Content")
		continue unless Exist(path)
		Cp(FileSet("**.*", BaseDirectory: path), assets)
	styleSheets = FileSet("src/Common.Web.UI/Common.Web.Ui/Assets/Content/Stylesheets/**.*")
	Cp(styleSheets, assets) if styleSheets.Files.Count

task @BuildWebSite, [@CleanWebSite]:
	buildTo = Path.GetFullPath(Path.Combine(Globals.BuildRoot.ToString(), Globals.Project.ToString()))
	projectPath = Path.GetFullPath("src/${Globals.Project}")
	projectFile = FileSet("${projectPath}/${Globals.Project}.*proj").Files.First()

	MkDir(buildTo) if not Exist(buildTo)
	params = { "OutDir" : "${buildTo}\\bin\\",
		"OutputPath" : "${buildTo}\\bin\\",
		"Configuration" : "Release"}
	if Globals.Maybe.Platform:
		params.Add("Platform", Globals.Platform)
	MsBuild(projectFile, "/verbosity:quiet", "/nologo",
			Target : "build",
			Parameters : params,
			FrameworkVersion : Globals.FrameworkVersion).Execute()
	Rm("${buildTo}/bin/*.xml")
	Cp(FileSet(["**/*.as?x",
				"**/*.svc",
				"**/*.brail",
				"**/*.brailjs",
				"**/*.swf",
				"**/*.gif",
				"**/*.png",
				"**/*.ico",
				"**/*.jpg",
				"**/*.js",
				"**/*.woff",
				"**/*.ttf",
				"**/*.svg",
				"**/*.eot",
				"**/*.coffee",
				"**/*.zip",
				"**/*.css",
				"**/*.skin",
				"**/*.htm",
				"**/*.sitemap",
				"**/*.master",
				"**/*.ico",
				"**/*.odt",
				"**/*.doc",
				"**/*.svc",
				"robots.txt",
				"crossdomain.xml"],
				BaseDirectory: projectPath),
		buildTo, true)
	sufix = GetConfigSufix(Globals)
	Cp("$projectPath/web.$sufix", "${buildTo}/Web.config")
	CopyAssets(buildTo)

task @CleanWebSite:
	buildTo = Path.GetFullPath(Path.Combine(Globals.BuildRoot.ToString(), Globals.Project.ToString()))
	projectPath = Path.GetFullPath("src/${Globals.Project}")
	projectFile = FileSet("${projectPath}/${Globals.Project}.*proj").Files.First()
	MsBuild(projectFile, "/verbosity:quiet", "/nologo",
			Target : "clean",
			Parameters : { "OutDir" : "${buildTo}\\bin\\",
						"Configuration" : "release" },
			FrameworkVersion : Globals.FrameworkVersion).Execute()
	Rm("${buildTo}/*", true) if Exist(buildTo)
