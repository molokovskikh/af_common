import System.IO
import file from Config.bake

buildTo = Path.GetFullPath(Path.Combine(Globals.BuildRoot.ToString(), Globals.Project.ToString()))
projectPath = Path.GetFullPath("src/${Globals.Project}")
projectFile = Path.GetFullPath("${projectPath}/${Globals.Project}.csproj")

def CopyAssets(output as string):
	return unless Exist("packages")

	assets = Path.Combine(output, "Assets", "Javascripts")
	javaScripts = FileSet("packages/**/*.min.js")
	Cp(javaScripts, assets)

	assets = Path.Combine(output, "Assets", "Stylesheets")
	for dir in Directory.GetDirectories("packages"):
		path = Path.Combine(dir, "Content", "Content")
		continue unless Exist(path)
		Cp(FileSet("**.*", BaseDirectory: path), assets)

task @BuildWebSite, [@CleanWebSite]:
	MkDir(buildTo) if not Exist(buildTo)
	MsBuild(projectFile, "/verbosity:quiet",
			Target : "build",
			Parameters : { "OutDir" : "${buildTo}\\bin\\",
						   "OutputPath" : "${buildTo}\\bin\\",
						   "Configuration" : "Release"},
			FrameworkVersion : Globals.FrameworkVersion).Execute()
	Rm("${buildTo}/bin/*.xml")
	Cp(FileSet(["**/*.as?x",
				"**/*.brail",
				"**/*.brailjs",
				"**/*.swf",
				"**/*.gif",
				"**/*.png",
				"**/*.jpg",
				"**/*.js",
				"**/*.woff",
				"**/*.ttf",
				"**/*.svg",
				"**/*.eot",
				"**/*.coffee",
				"**/*.zip",
				"**/*.css",
				"**/*.skin",
				"**/*.htm",
				"**/*.sitemap",
				"**/*.master"],
				BaseDirectory: projectPath),
		buildTo, true)
	Cp("${projectPath}/Web.release.config", "${buildTo}/Web.config")
	CopyAssets(buildTo)

task @CleanWebSite:
	MsBuild(projectFile, "/verbosity:quiet",
			Target : "clean",
			Parameters : { "OutDir" : "${buildTo}\\bin\\",
						   "Configuration" : "release" },
			FrameworkVersion : Globals.FrameworkVersion).Execute()
	Rm("${buildTo}/*", true) if Exist(buildTo)
